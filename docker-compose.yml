volumes:
  ollama_data:
  pgdata:
  stripe_cli_data:

services:
  database:
    build:
      context: database
      dockerfile: Dockerfile
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      TZ: Europe/Zurich
    command: 
      [
        "postgres",
        "-c",
        "log_destination=stderr",
        "-c",
        "shared_preload_libraries=pg_cron",
      ]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./database/install_extensions.sql:/docker-entrypoint-initdb.d/01-install_extensions.sql
      - ./database/create_database.sql:/docker-entrypoint-initdb.d/02-create_database.sql
    ports:
      - 5031:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    build:
      context: .
      dockerfile: Dockerfile_ollama    
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    entrypoint: >
      sh -c "
        echo 'Starting Ollama in background...';
        /bin/ollama serve &

        echo 'Waiting for Ollama API...';
        until curl -s http://localhost:11434/api/tags; do sleep 1; done;

        echo 'Pulling model mistral:instruct...';
        curl -X POST http://localhost:11434/api/pull -H 'Content-Type: application/json' -d '{\"name\": \"mistral:instruct\"}'
        echo 'Model pulled. Keeping Ollama running...';
        wait
      "

  frontend:
    user: root
    build:
      context: .
      dockerfile: Dockerfile_frontend
    container_name: frontend
    ports:
      - 5030:5030
    depends_on:
      - ollama
      - database
    command: bash -c 'uvicorn --host 0.0.0.0 --reload --port 5030 fastapi_main:app'
    volumes:
      - ./:/home/app/web
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - TZ=Europe/Zurich
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/postgres
    restart: always
  stripe-cli:
    image: stripe/stripe-cli:latest
    container_name: stripe-cli
    volumes:
      - stripe_cli_data:/root/.config/stripe
    command: ["listen", "--forward-to", "http://frontend:5030/webhook"]
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - frontend
    restart: unless-stopped
